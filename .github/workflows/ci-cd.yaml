name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      # ----------------------
      # Step 1: Checkout Code
      # ----------------------
      - name: Checkout code
        uses: actions/checkout@v3

      # ----------------------
      # Step 2: Set up Java
      # ----------------------
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # ----------------------
      # Step 3: Make mvnw executable
      # ----------------------
      - name: Make mvnw executable
        run: chmod +x mvnw

      # ----------------------
      # Step 4: Build Uber-JAR
      # ----------------------
      - name: Build Quarkus Uber-JAR
        run: ./mvnw package -DskipTests -Dquarkus.package.type=uber-jar

      # ----------------------
      # Step 5: Login to GHCR
      # ----------------------
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ----------------------
      # Step 6: Build & Push Docker Image
      # ----------------------
      - name: Build & Push Docker Image
        run: |
          IMAGE=ghcr.io/celisiwem/quarkus-app:latest
          docker build -t $IMAGE -f src/main/docker/Dockerfile .
          docker push $IMAGE

      # ----------------------
      # Step 7: Set up kubectl
      # ----------------------
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # ----------------------
      # Step 8: Configure Kubeconfig (Optional)
      # ----------------------
      # If your cluster requires credentials (e.g., Minikube, cloud), set up kubeconfig:
      # - name: Set Kubeconfig
      #   run: echo "${{ secrets.KUBECONFIG }}" > kubeconfig && export KUBECONFIG=kubeconfig

      # ----------------------
      # Step 9: Deploy to Kubernetes
      # ----------------------
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s-deployment.yaml
          kubectl apply -f k8s-service.yaml
